SQL Queries and Answers
Basics
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1.Write a query in SQL to find the name and year of the movies.
	select mov_title, mov_year from movie;

2. Write a query in SQL to find the year when the movie American Beauty released.
	select mov_year from movie where mov_title='American Beauty';

3. Write a query in SQL to find the movie which was released in the year 1999.
	select mov_title from movie where mov_year=1999;

4. Write a query in SQL to find the movies which was released before 1998
	select mov_title from movie where mov_year<1998;

5. Write a query in SQL to return the name of all reviewers and name of movies together in a single list.
	select rev_name from reviewer union select mov_title from movie;

6.Write a query in SQL to find the name of all reviewers who have rated 7 or more stars to their rating
	select rev.rev_name from reviewer rev inner join rating r on rev.rev_id=r.rev_id where rev_stars>=7;

7. Write a query in SQL to find the titles of all movies that have no ratings.
 	select mov_title from movie where mov_id not in (select mov_id from rating);

8. Write a query in SQL to find the titles of the movies with ID 905, 907, 917
	Select mov_title from movie where mov_id in (905,907,917);

9.Write a query in SQL to find the list of all those movies with year which include the words Boogie Nights
	select mov_title,mov_year from movie where mov_title like '%Boogie%Nights%';

10. Write a query in SQL to find the ID number for the actor whose first name is 'Woody' and the last name is 'Allen'
	select act_id from actor where act_fname='Woody' and act_lname='Allen';	
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Joins
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1.Write a SQL statement to prepare a list with salesman name, customer name and their cities for the salesmen and customer who belongs to the same city.
select s.name,c.cust_name,s.city,c.city from salesman s inner join customer c on s.city=c.city;

 2. Write a SQL statement to make a list with order no, purchase amount, customer name and their cities for those orders which order amount between 500 and 2000
select o.ord_no,o.purch_amt,c.cust_name,c.city from orders o inner join customer c on o.customer_id=c.customer_id where o.purch_amt between 500 and 2000;

3. Write a SQL statement to know which salesman are working for which customer.
	select s.name Salesman_Name,c.cust_name Customer_Name from salesman s inner join customer c on s.salesman_id=c.salesman_id;

4.Write a SQL statement to find the list of customers who appointed a salesman for their jobs who gets a commission from the company is more than 12%.
	select c.cust_name Customer_Name, s.commission Commission from salesman s inner join customer c on s.salesman_id=c.salesman_id where s.commission>0.12;

5.Write a SQL statement to find the list of customers who appointed a salesman for their jobs who does not live in the same city where their customer lives, and gets a commission is above 12%
	select c.cust_name Customer_Name,c.city, s.commission Commission from salesman s inner join customer c on s.salesman_id=c.salesman_id where s.city!=c.city and s.commission>0.12;

6.Write a SQL statement to find the details of a order i.e. order number, order date, amount of order, which customer gives the order and which salesman works for that customer and commission rate he gets for an order.
select o.ord_no, o.purch_amt,o.ord_date,c.cust_name,s.name,s.commission from orders o inner join customer c on o.customer_id=c.customer_id inner join salesman s on o.salesman_id=s.salesman_id;

7. Write a SQL statement to make a join on the tables salesman, customer and orders in such a form that the same column of each table will appear once and only the relational rows will come.
	select * from orders natural join customer natural join salesman; 

8.  Write a SQL statement to make a list in ascending order for the customer who works either through a salesman or by own. 
select c.cust_name,c.city,c.grade,s.name,s.commission from customer c left join salesman s on c.salesman_id=s.salesman_id order by c.customer_id;

9. Write a SQL statement to make a list in ascending order for the customer who holds a grade less than 300 and works either through a salesman or by own.
	select c.cust_name,c.city,c.grade,s.name,s.commission from customer c left join salesman s on c.salesman_id=s.salesman_id where c.grade<300 order by c.customer_id;

10. Write a SQL statement to make a report with customer name, city, order number, order date, and order amount in ascending order according to the order date to find that either any of the existing customers have placed no order or placed one or more orders.
	select c.cust_name, c.city, o.ord_no, o.ord_date, o.purch_amt from orders o inner join customer c on o.customer_id=c.customer_id order by o.ord_date;

11. Write a SQL statement to make a report with customer name, city, order number, order date, order amount salesman name and commission to find that either any of the existing customers have placed no order or placed one or more orders by their salesman or by own.
	select c.cust_name,c.city,o.ord_no,o.ord_date,o.purch_amt,s.name,s.commission
from customer c left join orders o on c.customer_id=o.customer_id left join salesman s on o.salesman_id=s.salesman_id;

12.Write a SQL statement to make a list in ascending order for the salesmen who works either for one or more customer or not yet join under any of the customers.
	select c.cust_name,c.city,c.grade,s.name as salesman_name,s.city,s.commission from customer c right join salesman s on c.salesman_id=s.salesman_id order by s.salesman_id;

13. Write a SQL statement to make a list for all salesmen along with customer name, city, grade, order number, date, and amount. 
	select s.name as salesman_name,s.city,s.commission,c.cust_name,c.city,c.grade,o.ord_no,o.ord_date,o.purch_amt from customer c right join salesman s on c.salesman_id=s.salesman_id right join orders o on s.salesman_id=o.salesman_id order by s.salesman_id;

14.